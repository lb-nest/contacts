// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum AssigneeType {
  User
  Chatbot
}

model AssignedTo {
  contactId Int          @id
  contact   Contact      @relation(fields: [contactId], references: [id], onDelete: Cascade)
  id        Int
  type      AssigneeType @default(User)

  @@unique([contactId, id])
  @@index([id])
  @@index([type])
}

model Chat {
  contactId Int
  contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)
  accountId String
  channelId Int?

  @@id([contactId, accountId])
  @@unique([accountId, channelId])
  @@index([accountId])
  @@index([channelId])
}

enum ContactStatus {
  Open
  Closed
}

model Contact {
  id           Int           @id @default(autoincrement())
  projectId    Int
  name         String        @default("")
  avatarUrl    String?
  notes        String        @default("")
  status       ContactStatus
  assignedTo   AssignedTo?
  chats        Chat[]
  priority     Int           @default(3)
  resolved     Boolean       @default(false)
  tags         ContactTag[]
  customFields CustomField[]
  history      History[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
  deletedAt    DateTime?

  @@unique([projectId, id])
  @@index([projectId])
  @@index([status])
  @@index([priority])
  @@index([resolved])
  @@index([createdAt])
  @@index([updatedAt])
}

enum HistoryEventType {
  Create
  Assign
  Return
  Close
  Update
  Remove
}

model History {
  id        Int              @id @default(autoincrement())
  contactId Int
  contact   Contact          @relation(fields: [contactId], references: [id], onDelete: Cascade)
  eventType HistoryEventType
  payload   Json?
  createdAt DateTime         @default(now())

  @@index([contactId])
  @@index([eventType])
  @@index([createdAt])
}

model Tag {
  id          Int          @id @default(autoincrement())
  projectId   Int
  name        String
  description String       @default("")
  color       String
  parentId    Int?
  parent      Tag?         @relation("parentAndChildren", fields: [parentId], references: [id], onDelete: SetNull)
  children    Tag[]        @relation("parentAndChildren")
  contacts    ContactTag[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@unique([projectId, id])
  @@unique([projectId, name])
  @@index([projectId])
}

model ContactTag {
  tagId     Int
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  contactId Int
  contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@id([tagId, contactId])
  @@index([tagId])
  @@index([contactId])
}

model CustomField {
  id        Int     @id @default(autoincrement())
  contactId Int
  contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)
  name      String
  value     String?

  @@index([contactId])
}
